<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-07-22T16:43:52-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Jayson Tian</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Writing List</title><link href="http://localhost:4000/life/what/" rel="alternate" type="text/html" title="Writing List" /><published>2021-07-13T00:00:00-04:00</published><updated>2021-07-13T00:00:00-04:00</updated><id>http://localhost:4000/life/what</id><content type="html" xml:base="http://localhost:4000/life/what/">&lt;h2 id=&quot;blog-bucket-list&quot;&gt;Blog Bucket List&lt;/h2&gt;

&lt;p&gt;This is my bucket list for all the articles and ideas I want to write for the future. Yes. This will be a brain dump. For me.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Write about the parts that&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Blog Bucket List</summary></entry><entry><title type="html">Basic ECG Modelling with Trigonometry</title><link href="http://localhost:4000/biology/ECG-Modelling/" rel="alternate" type="text/html" title="Basic ECG Modelling with Trigonometry" /><published>2020-12-07T00:00:00-05:00</published><updated>2020-12-07T00:00:00-05:00</updated><id>http://localhost:4000/biology/ECG-Modelling</id><content type="html" xml:base="http://localhost:4000/biology/ECG-Modelling/">&lt;iframe style=&quot;width:100%; height:500px;&quot; src=&quot;https://s3.us-west-2.amazonaws.com/secure.notion-static.com/9cc242a0-13a1-446d-b945-f83f74fd35a8/Final_IA_Report_Draft.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;amp;X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20201208%2Fus-west-2%2Fs3%2Faws4_request&amp;amp;X-Amz-Date=20201208T013140Z&amp;amp;X-Amz-Expires=86400&amp;amp;X-Amz-Signature=04d1fdff6396997301aa5af171857876eb68a2d363c7263aa0813c1ec2453c19&amp;amp;X-Amz-SignedHeaders=host&amp;amp;response-content-disposition=filename%20%3D%22Final_IA_Report_Draft.pdf%22&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Electricity is one of the most commonly used forms of energy. Not only generating power for daily appliances and technology, it is also an important element to maintaining life in the body. Notably, electricity is involved in the beating of the heart — an essential organ that pumps blood and delivers oxygen to other parts of the body. It contracts in response to the electrical depolarization of muscle cells and is stimulated by electrical nodes. An electrocardiogram (ECG) is an instrument that records the magnitude and time of electrical activity in the heart. The information is recorded on a graph that presents electrical signals at various locations of the heart, generated by electrodes placed on the surface of the body (Price, 2012).&lt;/p&gt;

&lt;p&gt;My grandpa has been undergoing chemotherapy which has had many harmful effects on his health. After seeing his ECG taken at the hospital, I was inspired to investigate how I can use mathematics to assess the health of his heart. Knowing that an ECG is a periodic signal, I am curious how I can apply math to model one and what algorithms are present in the real world that uses math for analysis. I want to use insight gathered from this exploration not only to learn about my grandfather’s health but to also see how realistic math models are in cardiology.&lt;/p&gt;

&lt;h2 id=&quot;research&quot;&gt;Research&lt;/h2&gt;

&lt;p&gt;To begin, understanding the anatomy of the heart in relation to ECG signals is essential for model development and pattern recognition. ECGs are recorded using 12 different lead directions, with limb leads (I, II, III, AVR, AVL and AVF) and chest leads (V1, V2, V3, V4, V5 and V6) (Price, 2012). For the sake of this investigation, V4 chest leads will be used across all models to allow for simplicity and consistency. This choice is because V4 leads typically exhibit a waveform similar to what is considered a “standard” ECG wave (Queens, n.d.), as in Figure 1. Also, comparing two different leads will be a major source of error as leads record signals from different directions and such comparison would cause incorrect interpretation.&lt;/p&gt;

&lt;p&gt;Figure 1 demonstrates the general waveform of an ECG signal. There are 5 deflections, called waves, that are either positive or negative and indicate a specific electrical event. (Healio, 2020) My approach was to first obtain an ECG of a normal healthy patient. After modelling the ECG, I could use the same method for my grandpa’s ECG. This choice is justified as the models can then be compared to identify similarities and differences.
Planning&lt;/p&gt;

&lt;p&gt;When deciding on a general model that would be fitting for the waveform, I considered some properties that are important. The problem I faced was deciding on how to model the seemingly arbitrary curves as it does not fit with the form of any general function.&lt;/p&gt;

&lt;p&gt;Initially, I wanted to create a piecewise function composed of polynomials, however, I reflected on what limitations this might have. Primarily, it would be difficult to make a piecewise function periodic as they are generally non-periodic with a restricted domain. In contrast, an essential property of an ECG model is that it can present the patient’s heart rate by observing the periodicity of the waves.&lt;/p&gt;

&lt;p&gt;In the end, I decided that a sinusoidal function is appropriate for this model because not only is it periodic but also contains amplitudes similar to the 5 ECG waves. By using substitution, it can also reflect the electrical levels of the heart at each point in time, just like an ECG. The problem is that I need to figure out how a function can be created that reflects the different waves at the same time. Transformations for  will not obtain waves of varying amplitudes and slopes. I began by investigating the sum of a series of sinusoidal functions.&lt;/p&gt;

&lt;p&gt;I plotted  in red and  in blue, seen in Figure 2. The function of their sum  is in black. I realized that at any given point at X, the output is the sum of the y-values for  and . This would mean that in order to successfully model multiple waves, 5 different sine functions are required and then added. As seen in Figure 3, the individual functions also need a “peak” where the event occurs, and have a “baseline” where there is no event happening. In other words, it would be where  until it cycles again and another event occurs. This “baseline” is essential for another reason — to prevent multiple peaks from adding together, as in figure 2. This would cause disruptions due to altitude overlaps. This is problematic as if this was done through computing analysis, it would make it difficult to extract the end function into its constituent waves (reverse analysis) and decrease the accuracy greatly.&lt;/p&gt;

&lt;p&gt;A function of this form, with a “peak” and a flat “baseline” is not commonly seen. To start, I attempted to recreate the P peak of the ECG waveform. To do so, I compared the components of a standard sinusoidal function with the form I wanted. A standard trigonometric function has the form:&lt;/p&gt;

&lt;p&gt;Where each variable represents a specific property of the function:&lt;/p&gt;

&lt;p&gt;is the amplitude
  is the period, or in other words, the span of each cycle
 is the horizontal translation
 is the vertical translation&lt;/p&gt;

&lt;p&gt;However, these basic transformations still resulted in a repeating oscillation of a sine wave without a flat section in the function. I realized that adding exponents to the sine function introduced this property. I started with  and attempted to observe the set of sinusoidal functions which take the form  and what occurs when . This is incredibly interesting as it is not a function that is commonly investigated nor studied in class. Certainly, the application of this form of trigonometric functions is useful in ECG modelling but may be also helpful in other fields of signal processing.
I began this investigation by constructing a table of values and trying to identify a trend across the set of functions by substituting in values of x where . This segment shows how the first part of the original  will be altered with the addition of exponent .&lt;/p&gt;

&lt;p&gt;Table 1. Output of functions with incrementing exponents derived from parent function f(x)=sin x.&lt;/p&gt;

&lt;p&gt;There are some trends to note after analyzing Table 1. To start, across all the function variations, the output for where  always results in  respectively. However, there are changes between values of  and  which demonstrates a fascinating trend. For all the functions, as , all values within this range decrease exponentially and the shape of the curve becomes more exaggerated. It begins by growing at a small rate of change with a sharp increase towards the end. However, all points where  converge results in a value of . This behaviour is evident when graphed in figure 4. As a property, it can be seen that the “a” value is an indicator of how steep or exaggerated the curve should be.
I also realized a possible limitation to my table of values. A property that was not displayed was how the parity of the function affected how the curves for the function behaves across periods. This was not accounted for because this difference is only seen in values that extended beyond the range used for Table 1. Consider  and , for example. For function , the output of  whether it is positive or negative will always result in a positive output after being squared. This does not hold true for  as a negative number cubed will result in a negative number. To view this idea more clearly,  and  was graphed in figure 5.
This property creates restrictions for the “a” value when modelling each peak of the ECG. As an odd function will result in alternating positive and negative deflections seen in figure 5, it does not allow for a consistent peak and altitude. Because heartbeats have a similar altitude for each cycling peak, it would not be realistic to model it as an odd function. An even function will ensure consistency as the peaks are all positive deflections. Therefore, when selecting the “a” value, we would restrict “a” to be an even number.&lt;/p&gt;

&lt;p&gt;ECGs of healthy individuals were obtained from a variety of sources and the V4 sections from two of the sources are displayed in figure 6 (D. Jenkins &amp;amp; S. Gerred, 2017). I decided to find multiple as I wanted to make sure my model is reliable and demonstrated similar properties throughout all ECGs of healthy individuals. Some notable observations about V4 leads are that the R wave has the highest altitude out of all the waves, the P and Q waves are small deflections that are barely visible, and that the T wave is the widest in shape out of the rest.&lt;/p&gt;

&lt;p&gt;Before going further, I realized it was essential to establish the scale to which time (x-axis) and electricity (y-axis) are measured in the ECG in relation to the coordinate grid. A standard ECG grid is distributed into small squares are large squares. A large square is composed of 5x5 small squares and each large square represents a time of 0.2 seconds. The height of one large square corresponds to 2 millivolts of electricity (Price, 2012). I decided for one unit of my graph to correspond to one large square in an ECG graph. This allows for more simple calculations, and the total time or electrical energy will be converted back from units to time or millivolts afterwards.&lt;/p&gt;

&lt;h2 id=&quot;sinusoidal-of-a-single-curve&quot;&gt;Sinusoidal of a Single Curve&lt;/h2&gt;

&lt;p&gt;I first constructed the P wave through a series of transformations. The real ECG was overlaid on top of the function. First, it is crucial to calculate the period of the function, which is the b value. In the ECG, the period is around 5 large squares between peaks of the R wave. Therefore, the corresponding period for the function will be 5 units. The following formula gives us the period:&lt;/p&gt;

&lt;p&gt;Substituting the desired value of 5 gives:&lt;/p&gt;

&lt;p&gt;I was faced with a problem where this value yielded two times the number of P waves then intended. It was strange as when  was graphed it produced a period of 5. Upon reflection, I realized  was an odd function, where the negative deflection in the sine wave was unaccounted for in my desired model. This is seen clearly when graphed in figure 7. To solve this problem, I divided the b value by 2, which yields , and this b value will produce each wave of the ECG at a period of 5 units apart.  Next, I determined the horizontal shift. I know that the peak of the sinusoidal will be at the midpoint of 0 and , which is . Therefore, the placement of the vertex for the P wave will match this value. Shifting the  left 1.3 units results in a matched vertex with the P wave seen in figure 8. Currently, the sinusoidal function is:&lt;/p&gt;

&lt;p&gt;It is important to note that there should be no vertical translation in any of the functions. This is to ensure that all “baselines” for each wave are at a value of 0. The next step is determining the amplitude of the wave. This is done by obtaining the vertex of the P wave and determining the y-value for that point. A value of 0.15 was obtained for the amplitude. Figure 9 displays the alignment of  with the amplitude of the P wave in the ECG.&lt;/p&gt;

&lt;p&gt;Finally, the “slope” of the model will be aligned with the curve by changing the exponential variable. Through trial, the value of 76 was obtained and the result of the final model for the P wave is seen in figure 10.&lt;/p&gt;

&lt;p&gt;After combining the different variables into one, the final function of the P curve is obtained:&lt;/p&gt;

&lt;p&gt;The other 4 curves (Q, R, S, T) were obtained using the same method and their respective functions and graphs are displayed in figure 11.&lt;/p&gt;

&lt;p&gt;When each segment is added together into one general function, the graph in figure 12 is obtained. Represented by . It can also be seen the benefit of using a sinusoidal rather than a polynomial — the sectors connect fluidly and the ECG wave flows naturally.&lt;/p&gt;

&lt;p&gt;After obtaining a model of a normal ECG, I will use the same method to determine my grandfather’s ECG and perform analysis. Although the same process was used as before, there was an additional component in the final function as there was were abnormalities in the shape of the T wave.  More specifically, it is called the ST segment, the joint section where the S wave meets the T wave. Two bumps are present instead of one wave, therefore the addition of two different sinusoidal functions was needed to model the T wave.&lt;/p&gt;

&lt;p&gt;The general function of the combined T wave is shown in figure 14. The curve starts with a flat increase but is intercepted with a sharp increase. It is modelled with the function:&lt;/p&gt;

&lt;p&gt;The final result of the function is graphed in figure 15 and the equation is:&lt;/p&gt;

&lt;p&gt;Another benefit of this model is that I can break down the function into its different waves and then compare my grandpa’s ECG to the normal ECG graph. I first conducted a comparison of wave amplitude which is the coefficient (variable a) for each sinusoidal function. The comparisons are presented in table 2. This comparison is valid because the scale I used for both models is identical, where each square in the ECG representing 1 unit. In terms of time, one unit represents 0.2 seconds.&lt;/p&gt;

&lt;p&gt;Table 2. Comparisons between wave amplitudes of normal ECG and my grandpa’s ECG.&lt;/p&gt;

&lt;p&gt;From table 2, it can be deduced that there is a significant change in the R wave amplitude. Also seen in figure 15, the R wave does not spike past the T wave. The table shows that both the R wave and T wave have the same amplitude. This may suggest abnormalities in these corresponding areas of the heart. The R wave indicates the changing direction of an electrical stimulus as it passes through the main ventricular walls (University of Nottingham, n.d.). The structure is quite thick and requires a surplus of energy which suggests why the R wave is one of the biggest waves generated during conduction. However, a small wave in my grandpa’s ECG model may suggest that his ventricular walls are not as thick. Another abnormality mentioned earlier was the shape of the T wave in the ECG. Normal T waves have a single curve, but in this there are two which add to become a large deformed wave. In the table, it also shows how the T wave is greater in amplitude, but not drastically.&lt;/p&gt;

&lt;p&gt;Although this is a basic analysis, it may present indications about the nature of my grandpa’s heart. I may want to tell him to ask the doctor about these abnormalities in the ECG. I am actually quite proud of creating such a model and being able to analyze my grandpa’s ECG model to this degree of specificity. However, after analysis, I began to consider how realistic this model is and the assumptions made throughout my investigation.&lt;/p&gt;

&lt;p&gt;Considerations and Model Application&lt;/p&gt;

&lt;p&gt;My model using sinusoidal functions is advantageous in two situations. The first being if a patient may want to see the general shape of their heartbeat and also its mathematical equation. Like the comparison in table 2, it may present some basic information about how the model deviates from a standard ECG. Second, the model is great for the approximation of an event and electrical level given any value of time. As it is a function, substituting any large time value would output an approximation for the patient’s electrical activity at that point in time. This is useful in a variety of ways, especially in time constricted decision-making and predicting certain electrical levels. It would be incredibly difficult to predict electrical levels by directly looking at a patient’s ECG, and this function would provide this data in a timely, and relatively accurate manner.&lt;/p&gt;

&lt;p&gt;However, this model is indeed basic and only a mathematical approximation for a signal that may not be perfectly constant in real life. The major assumption made in my investigation was that the patient’s heart rate remained the same and that all waves were reproduced at the same altitudes each repeating cycle. This is largely incorrect for many reasons. A patient’s heart rate is never constant as there are always biological factors that affect heart rate in small amounts. Even if there is variation in a period by a millisecond, in rigorous data analysis, this must be accounted for. This is where a periodic model is only useful for making comparisons but not to use as instruments for health predictions and pathogen identification. Additionally, waves always fluctuate and amplitudes do not stay constant. It is impossible for the heart to generate the exact same amount of electricity to pump and contract each cycle.&lt;/p&gt;

&lt;p&gt;Finally, as my model is an approximation, there are limitations that affect its accuracy. I believe it is essential to acknowledge these as they may affect data and the results in a variety of ways. The most prominent source of error for my model is the segments where different waves connect. Although adding different sinusoidal functions allow for the segments to flow better than a polynomial piecewise function, these joint segments are far less precise from the actual ECG in comparison to the precision of a specific wave and peak.&lt;/p&gt;

&lt;p&gt;After evaluating this model, I can conclude that it is good for basic analysis and learning about the characteristics of a patient’s ECG but is not accurate enough to use in real life and analytical applications. However, the concept behind the creation of my model and the use of sinusoidal functions are actually a fundamental part of real life algorithms used to analyze ECGs.&lt;/p&gt;

&lt;p&gt;A major problem I had when analyzing my grandpa’s ECG was that there were many random bumps and waves that were not consistent with what was a typical waveform. After research, I learned these arbitrary waves and fluctuations were known as “noise”. Noise is caused by certain external and internal factors during the recording of the heart, and because electrodes are placed on the surface of the body, it is inevitable that hints of other signals are also picked up by the electrodes, which may interfere with the true ECG wave (Haque et al, 2009).&lt;/p&gt;

&lt;p&gt;Therefore, another problem with my mathematical model was the ambiguity of results surrounding my grandpa’s T wave. Was the wave abnormal due to some problem in the heart, or was that noise caused by an external factor? This ambiguity in real life analysis should not occur as in clinical applications it would have implications on the possible health and life of a patient. Therefore, I believe that further techniques or more complex algorithms are needed for in depth analysis about diagnosing certain coronary diseases. This model only fulfills the purpose in being able to direct use for heart rate estimations as well as give a general mathematical shape of the ECG waveform.&lt;/p&gt;

&lt;p&gt;A technique that I looked into when trying to find an appropriate model was the Fourier series. The idea behind the Fourier series is that it breaks down a complex function into its trigonometric constituents using an infinite sum series of sine and cosines. This is useful as the larger the number of terms in the series get, the more accurate the approximation of the function becomes. However, the reason why I didn’t use the series for this investigation was that I wasn’t able to find a way to connect the complex approximations (in segments of waves) together as a whole signal. However, after further research, this idea of using a finite domain with infinite terms to model an approximation for a function is actually used in analytical computing to create a complex algorithm called the Fast Fourier Transform (FFT). This is one of the most commonly used algorithms in the medical industry for creating ECG analysis software and a method of coronary disease recognition through ECG input (B. V. P Prasad &amp;amp; V. Parthasarathy, 2018). An extension and next step for my investigation would be to dive deeper into this area of using a Fourier series as a model, learn more about the FFT, and the mathematical concepts behind its design.&lt;/p&gt;

&lt;p&gt;Through this exploration, I learned that although models for certain signals can be mathematically deduced, the extent to which these models are reliable and applicable in real life depends on the context as well as the possible limitations of the model. Each model has their benefits and it also depends on the circumstance. Also, some may be more accurate and useful than others. In general, I realized that functions and mathematical models always have possible sources of errors and that more accurate and efficient models can always be deduced.&lt;/p&gt;

&lt;p&gt;This investigation demonstrates not just the simple deduction of ECG analysis. It also suggests that repeated mathematical innovation is necessary to solve issues in the real world - especially in the field of biological signal analysis, where better models can be developed to help more people.&lt;/p&gt;

&lt;p&gt;Bibliography
Queens University. (n.d.). Analysis and Interpretation of the Electrocardiogram. Retrieved from
	https://elentra.healthsci.queensu.ca/assets/modules/ECG/index.html&lt;/p&gt;

&lt;p&gt;Healio. (2020). Introduction to the ECG. ECG Basics. Retrieved from 
	https://www.healio.com/cardiology/learn-the-heart/ecg-review/ecg-interpretation-tutorial/	
	introduction-to-the-ecg&lt;/p&gt;

&lt;p&gt;University of Nottingham. (n.d.). A Beginners Guide to Normal Heart Function, Sinus Rhythm &amp;amp; 	Common Cardiac Arrhythmias. Retrieved from
	https://www.nottingham.ac.uk/nursing/practice/resources/cardiology/function/r_wave.php&lt;/p&gt;

&lt;p&gt;B. V. P Prasad &amp;amp; V. Parthasarathy. (2018). Detection and classification of cardiovascular 	
	abnormalities using FFT based multi-objective genetic algorithm, Biotechnology &amp;amp; 	
	Biotechnological Equipment, 32:1, 183-193, DOI: 10.1080/13102818.2017.1389303&lt;/p&gt;

&lt;p&gt;Jenkins, D &amp;amp; Gerred, S. (2017). Normal adult 12 lead ECG. ECG Library. Retrieved from
	https://ecglibrary.com/norm.php&lt;/p&gt;

&lt;p&gt;Price, D. (2012). How to read an Electrocardiogram (ECG). Part One: Basic principles of the 
	ECG. The normal ECG. South Sudan Medical Journal. Retrieved from
	http://www.southsudanmedicaljournal.com/archive/may-2010/how-to-read-an-	
	electrocardiogram-ecg.-part-one-basic-principles-of-the-ecg.-the-normal-ecg.html&lt;/p&gt;

&lt;p&gt;Haque, A.K.M Fazlul &amp;amp; Ali, Hanif &amp;amp; Kiber, Md &amp;amp; Hasan, Md. Tanvir. (2009). Detection of 
	small variations of ECG features using wavelet. Journal of Engineering and Applied 
	Sciences. 4. Retrieved from
	https://www.researchgate.net/figure/Figure-2-Response-using-FFT-of-simulated-normal-
	a-and-noise-corrupted-b-ECG-signals_fig2_239927352&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Things I Realize</title><link href="http://localhost:4000/life/things-I-realize/" rel="alternate" type="text/html" title="Things I Realize" /><published>2020-11-12T00:00:00-05:00</published><updated>2020-11-12T00:00:00-05:00</updated><id>http://localhost:4000/life/things-I-realize</id><content type="html" xml:base="http://localhost:4000/life/things-I-realize/">&lt;p&gt;There are so many important things in our lives that go unnoticed. Not necessarily from a philosophical point of view, but more of a mindset approach on getting things done. There’s so many things we perceive and recognize but it never is processed in our brain. Might sound abstract, but it may make more sense when put in examples. I honestly thought about it, and I can lsit so many thigns that are underacknowledged.&lt;/p&gt;

&lt;h2 id=&quot;routines&quot;&gt;Routines&lt;/h2&gt;

&lt;p&gt;Yep. We go through the same motions, activities, every single day yet we never really think about the bigger picture of the purpose behind these daily actions. I honestly believe it’s because of how good humans are at adapting, but I wouldn’t bet it all on that. It’s that sometimes we are so caught in the bustle of life that it’s hard to recognize where the true goals and desires lie.&lt;/p&gt;</content><author><name></name></author><summary type="html">There are so many important things in our lives that go unnoticed. Not necessarily from a philosophical point of view, but more of a mindset approach on getting things done. There’s so many things we perceive and recognize but it never is processed in our brain. Might sound abstract, but it may make more sense when put in examples. I honestly thought about it, and I can lsit so many thigns that are underacknowledged.</summary></entry><entry><title type="html">The Biological Definition of Life</title><link href="http://localhost:4000/biology/life/" rel="alternate" type="text/html" title="The Biological Definition of Life" /><published>2020-06-29T00:00:00-04:00</published><updated>2020-06-29T00:00:00-04:00</updated><id>http://localhost:4000/biology/life</id><content type="html" xml:base="http://localhost:4000/biology/life/">&lt;p&gt;Everyday we are surrounded by millions of organisms that our very eye cannot see.&lt;/p&gt;</content><author><name></name></author><summary type="html">Everyday we are surrounded by millions of organisms that our very eye cannot see.</summary></entry><entry><title type="html">The Best Drinks at the Alley</title><link href="http://localhost:4000/food/bubbletea/" rel="alternate" type="text/html" title="The Best Drinks at the Alley" /><published>2020-06-03T00:00:00-04:00</published><updated>2020-06-03T00:00:00-04:00</updated><id>http://localhost:4000/food/bubbletea</id><content type="html" xml:base="http://localhost:4000/food/bubbletea/">&lt;p&gt;The Alley is a Taiwanese-based modern bubble tea chain known for their Brown Sugar Deerioca (tapioca pearl) drinks. The Alley’s trendy and unique branding starting with their signature logo – a male deer or buck head – has made it a social media darling.This cafe, the first Canadian location of a fledgling Taiwanese chain, offers creative teas and other beverages in an inviting space filled with exposed brick and lots of wood. The vibe is definitely more relaxed than your average bubble tea shop.&lt;/p&gt;</content><author><name></name></author><category term="Bubble Tea" /><summary type="html">The Alley is a Taiwanese-based modern bubble tea chain known for their Brown Sugar Deerioca (tapioca pearl) drinks. The Alley’s trendy and unique branding starting with their signature logo – a male deer or buck head – has made it a social media darling.This cafe, the first Canadian location of a fledgling Taiwanese chain, offers creative teas and other beverages in an inviting space filled with exposed brick and lots of wood. The vibe is definitely more relaxed than your average bubble tea shop.</summary></entry><entry><title type="html">Coding a Jekyll Site</title><link href="http://localhost:4000/coding/first-assss/" rel="alternate" type="text/html" title="Coding a Jekyll Site" /><published>2020-03-09T00:00:00-04:00</published><updated>2020-03-09T00:00:00-04:00</updated><id>http://localhost:4000/coding/first-assss</id><content type="html" xml:base="http://localhost:4000/coding/first-assss/">&lt;p&gt;This tutorial will walk you through the steps and basics on jekyll and liquid syntax. It’s actually really simple as there is nothing else you need other than HTML, CSS, and Javascript skills!&lt;/p&gt;</content><author><name></name></author><summary type="html">This tutorial will walk you through the steps and basics on jekyll and liquid syntax. It’s actually really simple as there is nothing else you need other than HTML, CSS, and Javascript skills!</summary></entry><entry><title type="html">Expectations vs Reality</title><link href="http://localhost:4000/blog/bored-things/" rel="alternate" type="text/html" title="Expectations vs Reality" /><published>2020-03-03T00:00:00-05:00</published><updated>2020-03-03T00:00:00-05:00</updated><id>http://localhost:4000/blog/bored-things</id><content type="html" xml:base="http://localhost:4000/blog/bored-things/">&lt;p&gt;Interesting.&lt;/p&gt;</content><author><name></name></author><category term="life" /><summary type="html">Interesting.</summary></entry><entry><title type="html">🍵 Matcha Documentation</title><link href="http://localhost:4000/blog/how-to-use-matcha/" rel="alternate" type="text/html" title="🍵 Matcha Documentation" /><published>2020-02-29T00:00:00-05:00</published><updated>2020-02-29T00:00:00-05:00</updated><id>http://localhost:4000/blog/how-to-use-matcha</id><content type="html" xml:base="http://localhost:4000/blog/how-to-use-matcha/">&lt;h1 id=&quot;what-is-matcha&quot;&gt;What is Matcha?&lt;/h1&gt;

&lt;p&gt;Matcha is an app that I built for my friend because Wunderlist is going away.&lt;/p&gt;

&lt;p&gt;The goal of this app is to provide a clean, simple interface for users to store tasks, yet customizable to have more complex features.&lt;/p&gt;

&lt;p&gt;Inspirations of this app include minimalist apps such as Notion, Bear, and Mochi.&lt;/p&gt;

&lt;h2 id=&quot;planned&quot;&gt;Planned&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Filter/Sorting System&lt;/li&gt;
  &lt;li&gt;Task Animation when Complete&lt;/li&gt;
  &lt;li&gt;Dropdown from Label&lt;/li&gt;
  &lt;li&gt;Improved Color Labeling System&lt;/li&gt;
  &lt;li&gt;Context Menu Fixes&lt;/li&gt;
  &lt;li&gt;Date Detection Response&lt;/li&gt;
  &lt;li&gt;Data Deletion Confirmation&lt;/li&gt;
  &lt;li&gt;Logbook Task Restoration&lt;/li&gt;
  &lt;li&gt;More Views&lt;/li&gt;
  &lt;li&gt;Task Details, Notes, Reminders&lt;/li&gt;
  &lt;li&gt;Mobile version&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;changelog&quot;&gt;Changelog&lt;/h1&gt;</content><author><name></name></author><category term="code" /><summary type="html">What is Matcha?</summary></entry><entry><title type="html">React JS Beginner Notes</title><link href="http://localhost:4000/blog/react-js-notes/" rel="alternate" type="text/html" title="React JS Beginner Notes" /><published>2019-12-07T00:00:00-05:00</published><updated>2019-12-07T00:00:00-05:00</updated><id>http://localhost:4000/blog/react-js-notes</id><content type="html" xml:base="http://localhost:4000/blog/react-js-notes/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot; id=&quot;markdown-toc-introduction&quot;&gt;Introduction&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#what-is-react&quot; id=&quot;markdown-toc-what-is-react&quot;&gt;What is React?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#why-is-it-useful&quot; id=&quot;markdown-toc-why-is-it-useful&quot;&gt;Why is it Useful?&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#creating-a-new-react-app&quot; id=&quot;markdown-toc-creating-a-new-react-app&quot;&gt;Creating A New React App&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#initiating-the-project&quot; id=&quot;markdown-toc-initiating-the-project&quot;&gt;Initiating the project&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#import-and-render&quot; id=&quot;markdown-toc-import-and-render&quot;&gt;Import and Render&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#separate-component-files&quot; id=&quot;markdown-toc-separate-component-files&quot;&gt;Separate Component files&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#the-basics&quot; id=&quot;markdown-toc-the-basics&quot;&gt;The Basics&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#jsx&quot; id=&quot;markdown-toc-jsx&quot;&gt;JSX&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#classname&quot; id=&quot;markdown-toc-classname&quot;&gt;ClassName&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#inline-styling&quot; id=&quot;markdown-toc-inline-styling&quot;&gt;Inline Styling&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#props&quot; id=&quot;markdown-toc-props&quot;&gt;Props&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#styling-and-props-example&quot; id=&quot;markdown-toc-styling-and-props-example&quot;&gt;Styling and Props Example&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#mapping-for-loop&quot; id=&quot;markdown-toc-mapping-for-loop&quot;&gt;Mapping (For Loop)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#class-based-components&quot; id=&quot;markdown-toc-class-based-components&quot;&gt;Class Based Components&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#state&quot; id=&quot;markdown-toc-state&quot;&gt;State&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#changing-state&quot; id=&quot;markdown-toc-changing-state&quot;&gt;Changing State&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#lifecycle-methods&quot; id=&quot;markdown-toc-lifecycle-methods&quot;&gt;Lifecycle Methods&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#forms&quot; id=&quot;markdown-toc-forms&quot;&gt;Forms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;h2 id=&quot;what-is-react&quot;&gt;What is React?&lt;/h2&gt;

&lt;p&gt;ReactJS is a JavaScript library framework that helps build user interfaces. It is open-source and created by Facebook. What makes it special is its use of the virtual JavaScript DOM and Web Components to make rendering code faster and easier.&lt;/p&gt;

&lt;h2 id=&quot;why-is-it-useful&quot;&gt;Why is it Useful?&lt;/h2&gt;

&lt;p&gt;Web Components allow for developers to create custom ‘elements’ for a webpage that can be rendered and returned. This also allows for reuse of elements without copying and pasting the code many times.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;MyCustomNavbar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ScaryStory&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;CoolSurvey&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here, it can be seen that the component &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;MyCustomNavBar /&amp;gt;&lt;/code&gt; will be called from a function which will return all the HTML or JavaScript code to render that specific component. This makes web components that are reusable. Also, it is very fast as it uses the &lt;a href=&quot;https://reactjs.org/docs/faq-internals.html&quot;&gt;virtualDOM&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;creating-a-new-react-app&quot;&gt;Creating A New React App&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Be sure you have &lt;a href=&quot;https://www.npmjs.com/get-npm&quot;&gt;npm installed&lt;/a&gt; beforehand.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;initiating-the-project&quot;&gt;Initiating the project&lt;/h2&gt;
&lt;p&gt;Initiating the project with React is quite simple! Open up terminal and enter the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-command&quot;&gt;npx create-react-app app-name
cd app-name
npm start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It’s incredibly straight forward. Now go into files and delete everything in the folder &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;import-and-render&quot;&gt;Import and Render&lt;/h2&gt;
&lt;p&gt;Open up the src folder in a code editor and create a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In every react file, there will be an import statement. This refers to the dependencies installed so that we can actually &lt;strong&gt;use&lt;/strong&gt; react. And don’t forget the ReactDOM dependecy too.&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ReactDOM&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;react-dom&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now, we will use ReactDOM’s render method to render something to the screen.&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;ReactDOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/* the component or HTML element that we want to render*/&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// styles it to the root element &amp;lt;body&amp;gt; in this case&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// for example&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;ReactDOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Hello God&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;, document.getElementById('root')
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now it is obvious it will become crowded when there are more than one element, so one can replace it with a component. We are going to call the component &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;App /&amp;gt;&lt;/code&gt; in this example and call it, which will return the block of HTML code.&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Buy Milk&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Eat Spaghetti&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  }
}

ReactDOM.render(
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;, document.getElementById('root')
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;separate-component-files&quot;&gt;Separate Component files&lt;/h2&gt;

&lt;p&gt;It is usual for there to be many components, which can be stored in their separate files.&lt;/p&gt;

&lt;p&gt;You must create a file with that name, using the example above, &lt;code class=&quot;highlighter-rouge&quot;&gt;App.js&lt;/code&gt;. It is common to store many components in a folder called ‘components’. Then accessing this &lt;code class=&quot;highlighter-rouge&quot;&gt;App.js&lt;/code&gt; file from &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;it is already assumed that App is a JS file so no need to put &lt;code class=&quot;highlighter-rouge&quot;&gt;.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the beggining of the new component file created, &lt;code class=&quot;highlighter-rouge&quot;&gt;App.js&lt;/code&gt;, import React, as we want it to run not in vanilla JS. Copy the function returning the elements of the component into the main body and then conclude with an &lt;strong&gt;EXPORT&lt;/strong&gt; statement. This part is crucial.&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// all of the body code&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// blah blah more code&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;the-basics&quot;&gt;The Basics&lt;/h1&gt;

&lt;h2 id=&quot;jsx&quot;&gt;JSX&lt;/h2&gt;

&lt;p&gt;Note that React runs on JSX, which is a special version of vanilla JavaScript within brackets. For example, doing this would work:&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userAge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;You are &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userAge&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; years old.&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;classname&quot;&gt;ClassName&lt;/h2&gt;

&lt;p&gt;In regular HTML code, class = ‘navbar’ would work, however because jsx runs, it must be in Camel Case:&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;navbar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;Only apply classname to react elements, NOT components!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;inline-styling&quot;&gt;Inline Styling&lt;/h2&gt;

&lt;p&gt;Inline styling is placed between double curly brackets, as this recognizes the first as JSX and the second as the data for the style.
For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h1 style={'{font-size:5pt}}'&amp;gt;&amp;lt;/h1&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Notice that styling options with dash such as &lt;code class=&quot;highlighter-rouge&quot;&gt;background-color&lt;/code&gt; must be camel cased, which now becomes &lt;code class=&quot;highlighter-rouge&quot;&gt;backgroundColor&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;props&quot;&gt;Props&lt;/h1&gt;

&lt;p&gt;What are props? Short form for properties, commonly the different props that are in HTML elements, but can be customized and modified containing data for each:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Eat spaghetti'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;checked=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'true'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;note=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Don't eat too much&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This example has the different props of class, text, checked, and note, which can have the values ‘title’, ‘eat spaghetti’, ‘true’, ‘dont eat too much’. This can be made into a JSON data:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-term&quot;&gt;[
  {
    'props':'data',
    'text':'eat spaghetti',
    'checked':'true',
    'note':'Dont eat too much'
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Why is this useful? We can have the same HTML framework or elements for different properties, like for a list of you tube videos, the list styles are all the same, but the name, links, and comments, of each video are different.&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Contacts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;job&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  }
}

ReactDOM.render(&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Contacts&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Mario&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;job=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Chef&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Or the props can be stated as a JSON data, where I call the data info, and then call it as a prop parent:&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Contacts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;job&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  }
}

ReactDOM.render(&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Contacts&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Mario&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;',&lt;/span&gt;
      &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;job&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Chef&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;styling-and-props-example&quot;&gt;Styling and Props Example&lt;/h2&gt;

&lt;p&gt;For example, if I have an app showing emails and I want to show any message that doesn’t have a reply to be red.&lt;/p&gt;

&lt;p&gt;Here will be &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ReactDOM&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-dom&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Email&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./Email&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Inbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Email&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Call me back'&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;reply=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Ok boomer.'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Email&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Remember to send me links!'&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;reply=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;ReactDOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Inbox&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is &lt;code class=&quot;highlighter-rouge&quot;&gt;Email.js&lt;/code&gt; for each email component:&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;reply&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'}&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;reply&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reply&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;display: !props.reply &amp;amp;&amp;amp; 'none'&lt;/code&gt; reads if there is no reply then display equals none.&lt;/p&gt;

&lt;h1 id=&quot;mapping-for-loop&quot;&gt;Mapping (For Loop)&lt;/h1&gt;

&lt;p&gt;Now with the email example above, it can be very inefficient if there were three hundred emails and I needed to copy and paste that component from 300 different emails.&lt;/p&gt;

&lt;p&gt;Mapping, is like the for loop where given an array of props, it will render a component for each in the list. For example, I have a JSON data named &lt;code class=&quot;highlighter-rouge&quot;&gt;inboxData.js&lt;/code&gt; that contains a 300 properties for name and details, and I import it.&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inboxData&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./inboxData&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;allEmails&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inboxData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Email&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;sender=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;message=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;details&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;allEmails&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;.map()&lt;/code&gt; function looped through all the props of the data and then created a new component for each. Each was defined as item in this example, but it can really be any word. ‘Item’ represents each in data (inboxData) that is being mapped.&lt;/p&gt;

&lt;h1 id=&quot;class-based-components&quot;&gt;Class Based Components&lt;/h1&gt;

&lt;p&gt;Why is there a small blur into object oriented programming? Well React has a useful feature called state that can only be called within a class, so its useful to know how to make a class. Looking at this function-based code:&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PizzaMenu&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can be converted to this class-based code:&lt;/p&gt;
&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PizzaMenu&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When switching to a class, function parameters are recognized from &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;. For example in this function based component where a property is passed so that the name data can be accessed:&lt;/p&gt;
&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Hello &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;is changed where props is recognized from &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; instead. So from &lt;code class=&quot;highlighter-rouge&quot;&gt;props.name&lt;/code&gt; it is changed to &lt;code class=&quot;highlighter-rouge&quot;&gt;this.props.name&lt;/code&gt;. Notice how there is still the render function.&lt;/p&gt;
&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Hello &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;state&quot;&gt;State&lt;/h1&gt;

&lt;p&gt;Props defined some part of a component that was unchangeable once it is rendered, as it will cause syntax errors when it is altered during the rendering process. However, state allows objects to be manipulative.&lt;/p&gt;

&lt;p&gt;States are only created in classes. Be aware that they cannot be made in functions. The constructor function creates a state.&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;// include this! it's important!!&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;yes&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Are you really that important? &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;RandomComponent&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ok this might not seem that incredible but it is superb for uses when there needs to be different variables for one component.&lt;/p&gt;

&lt;h2 id=&quot;changing-state&quot;&gt;Changing State&lt;/h2&gt;

&lt;p&gt;What if there’s a number and you want it to go from 0 to 1 on click?&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clicker&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;You&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;have&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;coins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Add&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/button&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What if you want the number to increment? This sets a function in setState where the previous state was referred to.&lt;/p&gt;
&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prevState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prevState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;lifecycle-methods&quot;&gt;Lifecycle Methods&lt;/h1&gt;

&lt;p&gt;Lifecycle methods are function motifs that can be used to refer the different states of a component. For example, in the example below, the function &lt;code class=&quot;highlighter-rouge&quot;&gt;componentDidMount&lt;/code&gt; will only return something once the component is mounted (loaded).&lt;/p&gt;

&lt;p&gt;The code below fetches for some api data and then turns it into accessible JSON data. Then, the character state is set as the data. If the data was ‘name: John’, then in code, &lt;code class=&quot;highlighter-rouge&quot;&gt;this.state.character.name&lt;/code&gt; will return  &lt;code class=&quot;highlighter-rouge&quot;&gt;John&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;loading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;character&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// some api fetch url&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;character&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;loading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loading&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;loading...&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;character&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will return the character name when finished loading, but if there is slow internet, it will show the text loading while it loads.&lt;/p&gt;

&lt;h1 id=&quot;forms&quot;&gt;Forms&lt;/h1&gt;</content><author><name></name></author><category term="dev" /><summary type="html"></summary></entry><entry><title type="html">Overthinking</title><link href="http://localhost:4000/blog/overthinking/" rel="alternate" type="text/html" title="Overthinking" /><published>2019-12-05T00:00:00-05:00</published><updated>2019-12-05T00:00:00-05:00</updated><id>http://localhost:4000/blog/overthinking</id><content type="html" xml:base="http://localhost:4000/blog/overthinking/">&lt;p&gt;Thinking about something in endless circles — is exhausting.&lt;/p&gt;

&lt;p&gt;While everyone overthinks a few things once in a while, chronic over-thinkers spend most of their waking time ruminating, which puts pressure on themselves. They then mistake that pressure to be stress.&lt;/p&gt;

&lt;p&gt;“There are people who have levels of overthinking that are just pathological,” says clinical psychologist Catherine Pittman, an associate professor in the psychology department at Saint Mary’s College in Notre Dame, Indiana.&lt;/p&gt;

&lt;p&gt;“But the average person also just tends to overthink things.” Pittman is also the author of &lt;em&gt;“Rewire Your Anxious Brain: How to Use the Neuroscience of Fear to End Anxiety, Panic, and Worry.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Overthinking can take many forms: endlessly deliberating when making a decision (and then questioning the decision), attempting to read minds, trying to predict the future, reading into the smallest of details, etc.&lt;/p&gt;

&lt;p&gt;People who overthink consistently run commentaries in their heads, criticising and picking apart what they said and did yesterday, terrified that they look bad — and fretting about a terrible future that might await them&lt;/p&gt;

&lt;p&gt;‘What ifs’ and ‘shoulds’ dominate their thinking, as if an invisible jury is sitting in judgement on their lives. And they also agonise over what to post online because they are deeply concerned about how other people will interpret their posts and updates.&lt;/p&gt;

&lt;p&gt;They don’t sleep well because ruminating and worrying keep them awake at night. “Ruminators repetitively go over events, asking big questions: Why did that happen? What does it mean?” adds Susan Nolen-Hoeksema, the chair of the department of psychology at Yale University and the author of &lt;em&gt;Women Who Think Too Much: How to Break Free of Overthinking and Reclaim Your Lif&lt;/em&gt;e. “But they never find any answers.”&lt;/p&gt;

&lt;p&gt;If you consistently focus on ruminating and make it a habit, it becomes a loop, And the more you do it, the harder it is to stop. Clinical psychologist Helen Odessky, Psy. D., shares some insight. “So often people confuse overthinking with problem-solving,” says Odessky, the author of “&lt;em&gt;Stop Anxiety from Stopping You.&lt;/em&gt;” “But what ends up happening is we just sort of go in a loop,” Odessky says. “We’re not really solving a problem.”&lt;/p&gt;

&lt;p&gt;Overthinking is destructive and mentally draining. It can make you feel like you’re stuck in one place, and if you don’t act, it can greatly impact on your day-to-day life. It can quickly put your health and total well-being at risk. Rumination makes you more susceptible to depression and anxiety.&lt;/p&gt;

&lt;p&gt;Many people overthink because they are scared of the future, and what could potentially go wrong. “Because we feel vulnerable about the future, we keep trying to solve problems in our head,” says David Carbonell, a clinical psychologist and author of “&lt;em&gt;The Worry Trick: How Your Brain Tricks You into Expecting the Worst and What You Can Do About It.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Extreme overthinking can easily sap your sense of control over your life. It robs us of active participation in everything around us.&lt;/p&gt;

&lt;p&gt;“Chronic worriers show an increased incidence of coronary problems and suppressed immune functioning. Dwelling on the past or the future also takes us away from the present, rendering us unable to complete the work currently on our plates. If you ask ruminators how they are feeling, none will say “happy.” Most feel miserable,” &lt;a href=&quot;https://hbr.org/2017/03/pressure-doesnt-have-to-turn-into-stress&quot;&gt;says&lt;/a&gt; Nicholas Petrie, a senior faculty member at the Center for Creative Leadership.&lt;/p&gt;

&lt;p&gt;Overthinking can trap the brain in a worry cycle. When ruminating become as natural as breathing, you need to quickly deal with it and find a solution to it.&lt;/p&gt;

&lt;p&gt;“When an unpleasant event puts us in a despondent mood, it’s easier to recall other times when we’ve felt terrible. That can set the stage for a ruminator to work herself into a downward spiral,” &lt;a href=&quot;https://www.realsimple.com/work-life/life-strategies/get-over-overthinking&quot;&gt;writes&lt;/a&gt; Amy Maclin of Real Simple.&lt;/p&gt;

&lt;h1 id=&quot;how-to-defeat-this-pattern-of-thinking-and-win-your-life-back&quot;&gt;How to defeat this pattern of thinking and win your life back&lt;/h1&gt;

&lt;p&gt;Chronic worrying is not permanent. It’s a mental habit that can be broken. You can train your brain to look at life from a different perspective.&lt;/p&gt;

&lt;p&gt;To overcome overthinking, Pittman recommends you replace the thought. “Telling yourself to not to have a certain thought is not the way to not have the thought,” she says.”You need to replace the thought.” What if she were to tell you to stop thinking about pink elephants? What are you going to think about? That’s right: pink elephants. If you don’t want to think about a pink elephant, conjure up an image of, say, a tortoise. “Maybe there’s a big tortoise holding a rose in its mouth as it crawls,” says Pittman. “You’re not thinking about pink elephants now.”&lt;/p&gt;

&lt;p&gt;Talk yourself out of it by noticing when you’re stuck in your head. You can tame your overthinking habit if you can start taking a grip on your self-talk — that inner voice that provides a running monologue throughout the day and even into the night.&lt;/p&gt;

&lt;p&gt;“You can cultivate a little psychological distance by generating other interpretations of the situation, which makes your negative thoughts less believable,” says Bruce Hubbard, the director of the Cognitive Health Group and an adjunct assistant professor of psychology and education at Columbia University. This is called &lt;em&gt;cognitive restructuring&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Ask yourself — What’s the probability that what I’m scared of will actually happen? If the probability is low, what are some more likely outcomes?&lt;/p&gt;

&lt;p&gt;If it’s a problem you keep ruminating about, rephrase the issue to reflect the positive outcome you’re looking for,” suggests Nolen-Hoeksema.&lt;/p&gt;

&lt;p&gt;“Instead of “I’m stuck in my career,” tell yourself or better still write, “I want a job where I feel more engaged.” Then make a plan to expand your skills, network, and look for opportunities for a better career.&lt;/p&gt;

&lt;p&gt;Find a constructive way of processing any worries or negative thoughts, says Honey. “Write your thoughts down in a journal every night before bed or first thing in the morning — they don’t have to be in any order. Do a ‘brain dump’ of everything on your mind onto the page. Sometimes that can afford a sense of relief, “ recommends Honey Langcaster-James, a psychologist.&lt;/p&gt;

&lt;p&gt;You can also control your ruminating habit by connecting with your senses. Begin to notice what you can hear, see, smell, taste, and feel.&lt;/p&gt;

&lt;p&gt;The idea is to reconnect with your immediate world and everything around you. When you begin to notice, you spend less time in your head.&lt;/p&gt;

&lt;p&gt;You can also notice your overthinking habit and talk yourself out of it. Becoming self-aware can help you take control.&lt;/p&gt;

&lt;p&gt;“Pay a little more attention,” says Carbonell. “Say something like: I’m feeling kind of anxious and uncomfortable. Where am I? Am I all in my head? Maybe I should go take a walk around the block and see what happens.”&lt;/p&gt;

&lt;p&gt;Recognise your brain is in overdrive or ruminating mode, and then try to snap out of it immediately. Or better still, distract yourself and redirect your attention to something else that requires focus.&lt;/p&gt;

&lt;p&gt;“If you need to interrupt and replace hundreds of times a day, it will stop fast, probably within a day,” says Dr Margaret Weherenberg, a psychologist and author of &lt;em&gt;The 10 Best-Ever Anxiety Management Techniques. &lt;/em&gt;“Even if the switch is simply to return attention to the task at hand, it should be a decision to change ruminative thoughts.”&lt;/p&gt;

&lt;p&gt;It takes practice, but with time, you will be able to easily recognise when you are worrying unnecessarily, and choose instead, to do something in real life rather than spending a lot of time in your head.&lt;/p&gt;

&lt;p&gt;For example, convert, “I can’t believe this happened” to “What can I do to prevent it from happening again?” or convert “I don’t have good friends!” to “What steps could I take to deepen the friendships I have and find new ones?” &lt;a href=&quot;https://www.buzzfeed.com/ryanhowes/how-to-stop-ruminating&quot;&gt;recommends&lt;/a&gt; Ryan Howes, PhD.&lt;/p&gt;

&lt;p&gt;Don’t get lost in thoughts about what you could have, would have, and should have done differently. Mental stress can seriously impact your quality of life.&lt;/p&gt;

&lt;p&gt;An overactive mind can make life miserable. Learning how to stop spending time in your head is one of the greatest gifts you can give yourself.&lt;/p&gt;

&lt;p&gt;Like all habits, changing your destructive thought patterns can be a challenge, but it’s not impossible. With practice, you can train your brain to perceive things differently and reduce the stress of overthinking.&lt;/p&gt;

&lt;p&gt;If overthinking is ruining your life, and if you think you may be spiralling into depression because of your thoughts, it pays to get professional help.&lt;/p&gt;</content><author><name></name></author><category term="life" /><summary type="html">Thinking about something in endless circles — is exhausting.</summary></entry></feed>